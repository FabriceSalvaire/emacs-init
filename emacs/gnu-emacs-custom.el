(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(after-save-hook '(executable-make-buffer-file-executable-if-script-p))
 '(auto-compression-mode t nil (jka-compr))
 '(auto-fill-inhibit-regexp nil)
 '(auto-image-file-mode t nil (image-file))
 '(blink-matching-paren nil)
 '(blink-matching-paren-on-screen nil)
 '(c++-font-lock-extra-types
   '("\\sw+_t" "\\([iof]\\|str\\)+stream\\(buf\\)?" "ios" "string" "rope" "list" "slist" "deque" "vector" "bit_vector" "set" "multiset" "map" "multimap" "hash\\(_\\(m\\(ap\\|ulti\\(map\\|set\\)\\)\\|set\\)\\)?" "stack" "queue" "priority_queue" "type_info" "iterator" "const_iterator" "reverse_iterator" "const_reverse_iterator" "reference" "const_reference" "gu?\\(boolean\\|char\\|int[0-9]*\\|float\\|double\\|pointer\\)" "bool" "T[A-Z]\\w+" "H1[A-Z]\\w+" "uint"))
 '(c-echo-syntactic-information-p t)
 '(c-font-lock-extra-types
   '("FILE" "\\sw+_t" "Lisp_Object" "gu?\\(boolean\\|char\\|int[0-9]*\\|float\\|double\\|pointer\\)" "bool"))
 '(c-strict-syntax-p nil)
 '(case-fold-search t)
 '(column-number-mode t)
 '(compilation-scroll-output t)
 '(compile-auto-highlight t)
 '(current-language-environment "UTF-8")
 '(dabbrev-abbrev-char-regexp nil)
 '(dabbrev-abbrev-skip-leading-regexp "\\\\$")
 '(delete-selection-mode nil nil (delsel))
 '(dired-omit-extensions
   '(".o" "~" ".bin" ".lbin" ".so" ".a" ".ln" ".blg" ".bbl" ".elc" ".lof" ".glo" ".idx" ".lot" ".svn/" ".hg/" ".git/" ".bzr/" "CVS/" "_darcs/" "_MTN/" ".fmt" ".tfm" ".class" ".fas" ".lib" ".mem" ".x86f" ".sparcf" ".dfsl" ".pfsl" ".d64fsl" ".p64fsl" ".lx64fsl" ".lx32fsl" ".dx64fsl" ".dx32fsl" ".fx64fsl" ".fx32fsl" ".sx64fsl" ".sx32fsl" ".wx64fsl" ".wx32fsl" ".fasl" ".ufsl" ".fsl" ".dxl" ".lo" ".la" ".gmo" ".toc" ".aux" ".cp" ".fn" ".ky" ".pg" ".tp" ".vr" ".cps" ".fns" ".kys" ".pgs" ".tps" ".vrs" ".pyc" ".pyo" ".idx" ".lof" ".lot" ".glo" ".blg" ".bbl" ".cp" ".cps" ".fn" ".fns" ".ky" ".kys" ".pg" ".pgs" ".tp" ".tps" ".vr" ".vrs" ".qmlc"))
 '(dired-omit-files "^\\.$\\|^\\..+$\\|^__pycache__$")
 '(dired-omit-mode nil t)
 '(dired-recursive-deletes 'top)
 '(dired-trivial-filenames "^\\.$\\|^#")
 '(fill-column 100)
 '(flycheck-disabled-checkers '(json-jsonlist javascript-jshint python-mypy))
 '(flycheck-pylintrc "setup.cfg")
 '(global-font-lock-mode t nil (font-lock))
 '(icicle-buffer-include-recent-files-nflag 1)
 '(js-indent-level 4)
 '(markdown-command "pandoc")
 '(package-selected-packages
   '(projectile-speedbar projectile clang-format flycheck-kotlin kotlin-mode markdown-toc flycheck-grammalecte language-detection languagetool dotenv-mode vue-mode dockerfile-mode docker-compose-mode go-mode markdown-mode+ markdown-preview-mode markdown-mode tern graphql-mode json-mode flycheck-pycheckers google-translate magit haskell-mode systemd apache-mode react-snippets rjsx-mode pippel live-py-mode importmagic typoscript-mode spice-mode cmake-project cmake-ide cmake-font-lock modern-cpp-font-lock cpputils-cmake cff auto-complete-c-headers pyimport jinja2-mode qml-mode csharp-mode string-inflection scss-mode sass-mode pyvenv python-django pylint protobuf-mode powerline php-mode irony-eldoc indent-guide icomplete+ icicles highlight-indentation graphviz-dot-mode gradle-mode glsl-mode flymake-shell flycheck-tip flycheck-pos-tip flycheck-irony flycheck-color-mode-line django-mode cuda-mode company-shell company-qml company-math company-jedi company-irony-c-headers company-irony company-c-headers company-auctex company-anaconda column-marker cmake-mode clean-aindent-mode auto-complete auctex-lua anything))
 '(perl-continued-brace-offset -2)
 '(perl-continued-statement-offset 2)
 '(perl-indent-level 2)
 '(py-continuation-offset 4)
 '(py-indent-offset 4)
 '(rst-level-1-face ((t nil)))
 '(rst-level-2-face ((t nil)))
 '(rst-level-3-face ((t nil)))
 '(rst-level-4-face ((t nil)))
 '(rst-level-face-base-light 0)
 '(safe-local-variable-values
   '((c-file-offsets
      (innamespace . 0)
      (inline-open . 0)
      (case-label . +))
     (espresso-indent-level . 8)
     (espresso-indent-level . 2)
     (engine . djnago)
     (engine . django)
     (engine . jinja2)))
 '(sass-indent-offset 4)
 '(scroll-bar-mode 'right)
 '(sgml-basic-offset 4)
 '(sh-basic-offset 2)
 '(sh-indentation 2)
 '(show-paren-mode t nil (paren))
 '(show-paren-ring-bell-on-mismatch t)
 '(show-paren-style 'mixed)
 '(show-trailing-whitespace t)
 '(speedbar-frame-parameters
   '((minibuffer)
     (width . 50)
     (border-width . 0)
     (menu-bar-lines . 0)
     (tool-bar-lines . 0)
     (unsplittable . t)))
 '(speedbar-supported-extension-expressions
   '("\\.vhdl?\\'" ".[ch]\\(\\+\\+\\|pp\\|c\\|h\\|xx\\)?" ".tex\\(i\\(nfo\\)?\\)?" ".el" ".emacs" ".l" ".lsp" ".p" ".java" ".f\\(90\\|77\\|or\\)?" ".ada" ".p[lm]" ".tcl" ".m\\(4\\)?" ".scm" ".pm" ".py" ".g" ".\\(s?ht\\|x\\)ml" "[Mm]akefile\\(\\.am\\)?" "configure\\.ac" ".i" ".PL" ".in"))
 '(spice-output-local "Gnucap" t)
 '(spice-simulator "Gnucap")
 '(spice-waveform-viewer "Gwave")
 '(standard-indent 2)
 '(tool-bar-mode nil)
 '(vc-bzr-diff-switches nil)
 '(vc-bzr-log-switches nil)
 '(vc-bzr-program "")
 '(vc-handled-backends '(RCS CVS SVN SCCS Git Hg Mtn Arch))
 '(version-control 'never))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:stipple nil :background "white" :foreground "black" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 143 :width normal :foundry "PfEd" :family "DejaVu Sans Mono"))))
 '(cperl-array-face ((t (:inherit font-lock-variable-name-face :foreground "lime green"))))
 '(cperl-hash-face ((t (:inherit font-lock-variable-name-face :foreground "light green"))))
 '(flycheck-color-mode-line-error-face ((t (:background "salmon"))))
 '(flycheck-color-mode-line-info-face ((t (:background "pale green"))))
 '(flycheck-color-mode-line-running-face ((t (:background "lavender"))))
 '(flycheck-color-mode-line-warning-face ((t (:background "orange"))))
 '(nxml-attribute-value-delimiter-face ((t (:inherit nxml-delimiter-face :foreground "LightSalmon"))))
 '(powerline-active1 ((t (:inherit mode-line :background "grey52"))))
 '(powerline-active2 ((t (:inherit mode-line :background "grey70"))))
 '(powerline-inactive1 ((t (:inherit mode-line-inactive :background "grey41"))))
 '(powerline-inactive2 ((t (:inherit mode-line-inactive :background "grey50"))))
 '(show-paren-match ((t (:bold t :foreground "blue"))))
 '(show-paren-mismatch ((t (:bold t :inverse-video t :foreground "red"))))
 '(trailing-whitespace ((t (:background "gray90")))))
